package com.migu.online.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.migu.online.model.ResposeModel;
import com.migu.online.service.CourseOnlineService;
import com.migu.online.vo.UserCourseOnlineVo;

/*线上课程*/
@Controller
@RequestMapping("/api/CourseOnline")
public class CourseOnlineController extends BaseController{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1676822697859536846L;

	private Logger log = LoggerFactory.getLogger(CourseOnlineController.class);

	@Autowired
	private CourseOnlineService courseOnlineService;


	
	/* 获取线上课程 列表页查询 */
	@RequestMapping("/getPage/type/{type}/isRecommended/{isRecommended}/pageIndex/{pageIndex}/pageSize/{pageSize}")
	@ResponseBody
	public ResposeModel getCourseOnlines(@PathVariable("type") Integer type,
			@PathVariable("isRecommended") Integer isRecommended, @PathVariable("pageIndex") Integer pageIndex,
			@PathVariable("pageSize") Integer pageSize) {
		ResposeModel res = new ResposeModel();
		if (null == pageIndex) {
			pageIndex = super.pageIndex;
		}
		if (null == pageSize) {
			pageSize = super.pageSize;
		}
		try {
			res.setData(courseOnlineService.selectByPage(type, isRecommended, pageIndex, pageSize));
		} catch (Exception e) {
			log.info("api-getCourseOnlines:" + e.toString());
			res.setStatus("0");
			res.setMsg("获取数据出错");
		}

		return res;
	}
	
	/* 获取线上推荐课程列表 */
	@RequestMapping("/getRecList")
	@ResponseBody
	public ResposeModel getRecList() {
		ResposeModel res = new ResposeModel();
		try {
			res.setData(courseOnlineService.selectListRec());
		} catch (Exception e) {
			log.info("api-getCourseOnlines:" + e.toString());
			res.setStatus("0");
			res.setMsg("获取数据出错");
		}

		return res;
	}

	/* 获取线上课程 */
	@RequestMapping("/detail/id/{id}/userId/{userId}")
	@ResponseBody
	public ResposeModel getCourseOnline(@PathVariable("id") Long id, @PathVariable("userId") Long userId) {
		// TODO 判断用户是否购买
		ResposeModel res = new ResposeModel();
		try {
			UserCourseOnlineVo course = courseOnlineService.selectUserOne(id, userId);
			course.setPlayNumber(courseOnlineService.getVideoPlayNumber(id));
			res.setData(course);
			// 视频播放记录
			if (null != course && course.getIsPay() == 1) {
				courseOnlineService.videoPlayRecord(id, super.getCurrentUser(), "APP");
			}
		} catch (Exception e) {
			log.info("api-getCourseOnline:" + e.toString());
			res.setStatus("0");
			res.setMsg("获取数据出错");
		}

		return res;
	}

}
